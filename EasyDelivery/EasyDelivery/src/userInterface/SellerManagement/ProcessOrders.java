/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.SellerManagement;

import business.Customer.CustomerAccount;
import business.Ecosystem;
import business.Enterprise.Enterprise;
import business.Enterprise.SellerEnterprise;
import business.Enterprise.ShippingEnterprise;
import business.Network.Network;
import business.Organization.InventoryManagementOrganization;
import business.Organization.Organization;
import business.Role.Role;
import business.UserAccount.UserAccount;
import business.WorkQueue.ProductOrderWorkRequest;
import business.WorkQueue.ShippingOrderWorkRequest;
import business.WorkQueue.WorkRequest;
import business.order.OrderItem;
import java.awt.CardLayout;
import java.util.Date;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gunjan
 */
public class ProcessOrders extends javax.swing.JPanel {

    private InventoryManagementOrganization org;
    private JPanel container;
    private Ecosystem system;
    private UserAccount sellAccount;
    private SellerEnterprise sellerEnterprise;
    private Network network;
    String reference;
    int selectedRow;

    /**
     * Creates new form ProcessOrders
     */
    public ProcessOrders(JPanel container, UserAccount selleracc, Ecosystem system, InventoryManagementOrganization org, SellerEnterprise sellerEnterprise, Network network) {
        initComponents();
        this.org = org;
        this.container = container;
        this.system = system;
        this.sellerEnterprise = sellerEnterprise;
        this.network = network;
        this.sellAccount = selleracc;
        populateTable();
        populateComboBoxServiceProvider();
        reference = String.valueOf(UUID.randomUUID());

        jLabel15.setText("<html><u>Process Your Requests</u></html>");

    }

    private void populateComboBoxServiceProvider() {
        comboBoxServiceProvider.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterprises(Enterprise.EnterpriseType.SHIPPINGENTERPRISE)) {
            comboBoxServiceProvider.addItem(enterprise);
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();

        model.setRowCount(0);
        tblOrders.setRowHeight(100);
        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
            if (request instanceof ProductOrderWorkRequest) {
                ProductOrderWorkRequest powr = (ProductOrderWorkRequest) request;
                Object[] row = new Object[7];
                row[0] = powr;
                row[1] = powr.getOrderItem().getProduct().getModelNo();
                row[2] = powr.getOrderItem().getTotalPrice();
                row[3] = powr.getOrderItem().getQuantity();
                row[4] = powr.getSender().getPerson();
                row[5] = powr.getReceiver() == null ? null : request.getReceiver().getPerson();
                row[6] = powr.getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btnAccept = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnCancelOrder = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtRefNo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        comboBoxServiceProvider = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();

        btnAccept.setText("Accept Order");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Ordered", "Model Number", "Quantity", "Total Price", "Customer", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        btnCancelOrder.setText("Cancel Order");
        btnCancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelOrderActionPerformed(evt);
            }
        });

        btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow-icon.png"))); // NOI18N
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Calligraphy", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 255));
        jLabel15.setText("Process Your Requests");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Make A Shipping Request"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("REFERENCE NUMBER");

        txtRefNo.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Select Shipping Service Provider:");

        comboBoxServiceProvider.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxServiceProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxServiceProviderActionPerformed(evt);
            }
        });

        btnSubmit.setText("Ready To Pickup");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRefNo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSubmit)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(comboBoxServiceProvider, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRefNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(comboBoxServiceProvider, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnSubmit)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBack1)
                                .addGap(104, 104, 104)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1065, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(396, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(btnCancelOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack1)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        btnCancelOrder.setEnabled(false);
        selectedRow = tblOrders.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select the row","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        ProductOrderWorkRequest request = (ProductOrderWorkRequest) tblOrders.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("Order Processing")){
            JOptionPane.showMessageDialog(null,"Order is already processed");
            return;
        }
        if (org.getSkuCatalog().fulfillorder(request.getOrderItem().getProduct(), request.getOrderItem().getQuantity())) {
            request.setStatus("Order Processing");
            JOptionPane.showMessageDialog(null, "Order processing", "Information Message", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Quantity not available", "Information Message", JOptionPane.INFORMATION_MESSAGE);
            request.setStatus("Quantity Not Available");
        }
        
        request.setReceiver(sellAccount);
        populateTable();
        request.setReferenceNo(reference);
        txtRefNo.setText(reference);
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelOrderActionPerformed
        btnAccept.setEnabled(false);
        btnCancelOrder.setEnabled(false);
        int otherselectedRow = tblOrders.getSelectedRow();
        if (otherselectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select the row","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        ProductOrderWorkRequest request = (ProductOrderWorkRequest) tblOrders.getValueAt(otherselectedRow, 0);
        request.setStatus("Order Cancelled");
        
    }//GEN-LAST:event_btnCancelOrderActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        //selectedRow = tblOrders.getSelectedRow();
        //if (selectedRow > 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Is Your Order Ready for Pickup?", "Confirmation", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION){
                ProductOrderWorkRequest request = (ProductOrderWorkRequest) tblOrders.getValueAt(selectedRow, 0);

                OrderItem oi = request.getOrderItem();
                ShippingOrderWorkRequest shippingrequest = new ShippingOrderWorkRequest(oi);

            Organization shippingOrganization = network.getEnterpriseDirectory().getNearestServiceCentre(org, (ShippingEnterprise) comboBoxServiceProvider.getSelectedItem());
            
            if (shippingOrganization != null) {
                shippingrequest.setRequestDate(new Date());
                shippingrequest.setReferenceNo(reference);
                shippingrequest.setCustomerAccount((CustomerAccount) request.getSender());
                shippingrequest.setReceiver(shippingOrganization.getUserAccountDirectory().getUserAccount(Role.RoleType.ShippingService));
                shippingrequest.setSender(sellAccount);
                shippingrequest.setStatus("Pending");
                shippingOrganization.getWorkQueue().getWorkRequestList().add(shippingrequest);
                }
                JOptionPane.showMessageDialog(null, "Shipping order Request sent to "+comboBoxServiceProvider.getSelectedItem()+" "+shippingOrganization.getAddress());
                populateTable(); 
            }
//        }else{
//            JOptionPane.showMessageDialog(null,"Please Select the row");
//            return;
//        }


  
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void comboBoxServiceProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxServiceProviderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxServiceProviderActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBack1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboBoxServiceProvider;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtRefNo;
    // End of variables declaration//GEN-END:variables
}
