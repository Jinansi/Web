/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.shippingManagement;

import business.Ecosystem;
import business.Organization.ShippingOrganization;
import business.UserAccount.UserAccount;
import business.WorkQueue.ShippingOrderWorkRequest;
import business.WorkQueue.WorkRequest;
import business.order.OrderItem;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abc
 */
public class ShippingWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShippingWorkAreaJPanel
     */
    private JPanel container;
    private UserAccount account;
    private Ecosystem system;
    private ShippingOrganization org;

    public ShippingWorkAreaJPanel(JPanel container, UserAccount userAccount, Ecosystem system, ShippingOrganization shippingorg) {
        initComponents();
        this.account = userAccount;
        this.container = container;
        this.system = system;
        this.org = shippingorg;
        populateTable();
        
        jLabel1.setText("<html><u>Payment</u></html>");
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblShipping.getModel();

        model.setRowCount(0);
        tblShipping.setRowHeight(80);
        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
            if (request instanceof ShippingOrderWorkRequest) {
                ShippingOrderWorkRequest sowr = (ShippingOrderWorkRequest) request;
                Object[] row = new Object[10];
                row[0] = sowr;
                row[1] = sowr.getOrderItem().getQuantity();
                row[2] = sowr.getSender().getPerson();
                row[3] = sowr.getReceiver() == null ? null : request.getReceiver().getPerson();
                row[4] = sowr.getCustomerAccount().getAddress();
                row[5] = sowr.getRequestDate();
                row[6] = sowr.getResolveDate();
                row[7] = sowr.getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblShipping = new javax.swing.JTable();
        txtDispatch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnProcessRequest = new javax.swing.JButton();

        tblShipping.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Reference No.", "No of Parcels", "Sender", "Receiver", "Deliver To", "Request Date", "Resolve Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblShipping);

        txtDispatch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtDispatch.setText("Change Order Status");
        txtDispatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDispatchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Shipping Work Area");

        btnProcessRequest.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnProcessRequest.setText("Process Request ");
        btnProcessRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnProcessRequest)
                        .addGap(35, 35, 35)
                        .addComponent(txtDispatch, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcessRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDispatch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(256, 256, 256))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDispatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDispatchActionPerformed
        
        int selectedRow = tblShipping.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select the row","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        ShippingOrderWorkRequest req = (ShippingOrderWorkRequest) tblShipping.getValueAt(selectedRow, 0);
        if(req.getStatus().equalsIgnoreCase("Pending")){
            JOptionPane.showMessageDialog(null,"Please notify customer that order is in process");
            return;
        }else
        if(req.getStatus().equalsIgnoreCase("Order Processing")){
            req.setStatus("Order Dispatched");
            populateTable();
            req.getOrderItem().setStatus(OrderItem.Status.Dispatched);
        }else if(req.getStatus().equalsIgnoreCase("Order Dispatched")){
            req.setStatus("Order Delivered");
            req.setResolveDate(new Date());
            req.getOrderItem().setStatus(OrderItem.Status.Delivered);
            populateTable();
        }
    

    }//GEN-LAST:event_txtDispatchActionPerformed

    private void btnProcessRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessRequestActionPerformed
        int selectedRow = tblShipping.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select the row","Information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Ready to process the order?", "Confirmation", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION){       
        ShippingOrderWorkRequest req = (ShippingOrderWorkRequest) tblShipping.getValueAt(selectedRow, 0);
        req.setStatus("Order Processing");
        req.setReceiver(account);
        req.getOrderItem().setStatus(OrderItem.Status.InProcess);
        populateTable();
        }
    }//GEN-LAST:event_btnProcessRequestActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcessRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblShipping;
    private javax.swing.JButton txtDispatch;
    // End of variables declaration//GEN-END:variables
}
